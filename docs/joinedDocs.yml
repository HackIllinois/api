openapi: 3.0.1
info:
    description: 'An API providing multiple services to support a hackathon, such as managing authentication, users, registration, admission decisions, RSVP, check-in, mail, events, and statistics.'
    version: 0.1.0
    title: 'HackIllinois API'
    termsOfService: 'http://hackillinois.org'
    contact:
        email: systems@hackillinois.org
    license:
        name: 'University of Illinois / NCSA Open Source License'
        url: 'https://opensource.org/licenses/NCSA'
servers:
    -
        url: 'https://api.hackillinois.org:{port}'
        description: 'Production server'
        variables:
            port:
                enum:
                    - "8000"
                default: "8000"
tags:
    -
        name: User
        description: 'Used to store and retrieve user information'
paths:
    /user/:
        get:
            tags:
                - User
            summary: "Gets current user's information"
            description: 'Returns the info for current user (the user whose ID is encoded in the JWT).'
            security:
                - Authorization: [User]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfo'
                '400':
                    $ref: '#/components/responses/UnprocessibleError'
                '403':
                    $ref: '#/components/responses/AuthorizationError'
        post:
            tags:
                - User
            summary: 'Creates a user'
            description: 'Creates a user with the id in the request body, and returns the user as it is recorded in the database.'
            security:
                - Authorization: [Admin]
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserInfo'

            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfo'
                '400':
                    $ref: '#/components/responses/UnprocessibleError'
                '403':
                    $ref: '#/components/responses/AuthorizationError'
    '/user/{userId}/':
        parameters:
            -
                $ref: "#/components/parameters/userId"
        get:
            tags:
                - User
            description: 'Returns a user by id.'
            summary: 'Returns a user by id.'
            security:
                - Authorization: [User]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserInfo'
                '400':
                    $ref: '#/components/responses/UnprocessibleError'
                '403':
                    $ref: '#/components/responses/AuthorizationError'
    /user/filter/:
        get:
            tags:
                - User
            description: "Get a filtered list of users"
            summary: 'Returns a list of users who match the given key-value pairs.'
            security:
                - Authorization: [User]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/UserInfo'
                '400':
                    $ref: '#/components/responses/UnprocessibleError'
                '403':
                    $ref: '#/components/responses/AuthorizationError'

# Section containing reusable objects commonly dealt with, throughout the API, that avoids code duplication
components:
    securitySchemes:
        Authorization:
            type: http
            scheme: bearer
            description: "The JWT for the API, received after authenticating with one of our supported OAuth providers. For local development configurations, it is generated once the API is built. Note that this is invalid for use in production."
            bearerFormat: JWT
    parameters:
        userId:
            name: "userId"
            in: path
            description: 'The user ID of the user that should be returned.'
            allowEmptyValue: false
            required: true
            schema:
                type: string
    responses:
        UnprocessibleError:
            description: The request resource could not be found, an update did not occur, or a struct with the given information already exists in the database.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UnprocessibleError'
        AuthorizationError:
            description: Authorization header is missing, or contains an invalid JWT. If roles have changed, make sure you hit the /auth/token/refresh/ endpoint to update the JWT.
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AuthorizationError'
    schemas:
        UserInfo:
            type: object
            properties:
                id:
                    type: string
                username:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                email:
                    type: string
        AuthorizationError:
            type: object
        UnprocessibleError:
            type: object
            properties:
                status:
                    type: string
                title:
                    type: string
                message:
                    type: string
